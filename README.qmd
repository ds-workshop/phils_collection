---
title: "README"
format: gfm
editor: source
---

# phils_collection

can you predict which board games phil wants to add to his collection?

this project illustrates using `targets` to create a predictive modeling pipeline with `tidymodels`. this pipeline produces a `vetiver` model and a model report card.

```{r}
#| message: false
#| echo: false
#| results: "asis"

cat(c("```mermaid", targets::tar_mermaid(targets_only = T), "```"), sep = "\n")

```

to run the pipeline:

1. run `renv::restore()` to restore project dependencies
2. run `targets::tar_make()` to execute the pipeline

## data

**games** - a snapshot of all games from boardgamegeek

**collection** - a snapshot of phil's board game collection

## src

functions used in the pipeline

# results

tracking results from pipeline runs:

```{r}
#| include: false

# packages
library(dplyr)
library(tidyr)
# get functions used in targets
targets::tar_source("src/")

```


## validation set

```{r}

valid = 
    get_file_history("targets-runs/valid_metrics.csv")

valid |>
    group_by(wflow_id )|>
    slice_max(when, n =1) |>
    ungroup() |>
    select(sha, when, author, wflow_id, .config, .metric, mean, model, rank) |>
    pivot_wider(
        names_from = .metric,
        values_from = mean
    ) |>
    arrange(mn_log_loss) |>
    gt::gt() |>
    gt::as_raw_html()

```

## test set

```{r}

test = 
    get_file_history("targets-runs/test_metrics.csv")

test |>
    group_by(wflow_id) |>
    slice_max(when, n =1) |>
    ungroup() |>
    select(sha, when, author, version, wflow_id, .metric, .estimate) |>
    pivot_wider(
        names_from = .metric,
        values_from = .estimate
    ) |>
    arrange(mn_log_loss) |>
    gt::gt() |>
    gt::as_raw_html()

```

